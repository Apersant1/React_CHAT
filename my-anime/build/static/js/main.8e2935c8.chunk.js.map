{"version":3,"sources":["utils/consts.js","components/Login.js","components/Loader/Loader.js","components/Message.js","components/Chat.js","components/routes.js","components/AppRouter.js","components/Navbar.js","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Login","auth","useContext","Context","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","user","Container","Grid","container","style","height","window","innerHeight","alignItems","justify","width","background","borderRadius","direction","Box","p","Button","onClick","variant","Loader","className","useStyles","makeStyles","root","Width","backgroundColor","title","fontSize","color","marginLeft","pos","marginBottom","Message","data","key","displayName","photoURL","text","classes","useAuthState","Card","minWidth","fontFamily","uid","marginRight","padding","CardContent","display","maxWidth","justifyContent","Avatar","src","Typography","gutterBottom","component","publicRoutes","path","Component","privateRoutes","firestore","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","sendMessage","add","photoUrl","createdAt","FieldValue","serverTimestamp","onKeyDown","e","code","TextField","fullWidth","marginTop","placeholder","onChange","target","overflow","border","overflowY","map","message","AppRouter","exact","to","Navbar","AppBar","position","Toolbar","signOut","App","console","log","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.8e2935c8.chunk.js","sourcesContent":["\r\n// Пути для рендера компонентов\r\nexport const LOGIN_ROUTE = \"/login\";\r\nexport const CHAT_ROUTE = \"/chat\";\r\n","import { Container, Grid, Box, Button } from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { Context } from \"../index\";\r\nimport firebase from \"firebase\";\r\nconst Login = () => {\r\n  const { auth } = useContext(Context);\r\n\r\n  const login = async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const { user } = await auth.signInWithPopup(provider);\r\n    return user\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid\r\n        container\r\n        style={{ height: window.innerHeight - 50 }}\r\n        alignItems={\"center\"}\r\n        justify={\"center\"}\r\n      >\r\n        <Grid\r\n          style={{ width: 400, background: \"lightgray\", borderRadius: 10 }}\r\n          container\r\n          alignItems={\"center\"}\r\n          direction={\"column\"}\r\n        >\r\n          <Box p={5}>\r\n            <Button\r\n              onClick={login}\r\n              style={{ background: \"white\" }}\r\n              variant={\"outlined\"}\r\n            >\r\n              Войти с помощью Google\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\nexport default Login;\r\n","import { Container, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Loader.css\";\r\nexport const Loader = () => {\r\n  return (\r\n    <Container>\r\n      <Grid\r\n        container\r\n        style={{ height: window.innerHeight - 50 }}\r\n        alignItems={\"center\"}\r\n        justify={\"center\"}\r\n      >\r\n        <Grid container alignItems={\"center\"} direction={\"column\"}>\r\n          <div className=\"lds-ellipsis\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Context } from \"../index\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    Width: \"50%\",\r\n    backgroundColor: \"#ccc\",\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    color: \"#fff\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function Message({ data, key, displayName, photoURL, text }) {\r\n  const { auth } = useContext(Context);\r\n  const classes = useStyles();\r\n  const [user] = useAuthState(auth); // Получение данных пользователя из контекста\r\n  return (\r\n    <Card\r\n      style={{\r\n        minWidth: 150,\r\n        fontFamily: \"Roboto\",\r\n        backgroundColor: user.uid === data.uid ? \"#ccc\" : \"#017AFB\",\r\n        marginLeft: user.uid === data.uid ? \"auto\" : \"10px\",\r\n        marginRight: user.uid === data.uid ? \"10px\" : \"auto\",\r\n        marginBottom: 10,\r\n        color: user.uid === key ? \"#000\" : \"#fff\",\r\n        width: \"fit-content\",\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            maxWidth: \"150px\",\r\n            height: \"50%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-evenly\",\r\n            marginBottom: \"5%\",\r\n          }}\r\n        >\r\n          <Avatar src={photoURL} />\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            {displayName}\r\n          </Typography>\r\n        </div>\r\n\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {text}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useContext, useState, Fragment } from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nimport { Container, Grid, Button, TextField } from \"@material-ui/core\";\r\n\r\nimport { Context } from \"../index\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { Loader } from \"./Loader/Loader\";\r\nimport Message from \"./Message\";\r\n\r\nconst Chat = () => {\r\n  const { auth, firestore } = useContext(Context);\r\n  const [user] = useAuthState(auth);\r\n  const [value, setValue] = useState(\"\"); // Вытаскиваем значения из input'a\r\n  const [messages, loading] = useCollectionData(\r\n    firestore.collection(\"messages\").orderBy(\"createdAt\") // Обращение к firebase\r\n  );\r\n\r\n  const sendMessage = async () => {\r\n    if (value !== \"\") {\r\n      firestore.collection(\"messages\").add({\r\n        uid: user.uid,\r\n        displayName: user.displayName,\r\n        photoUrl: user.photoURL,\r\n        text: value,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      }); // Добавляем запись в firestore\r\n      setValue(\"\"); // Очищаем input\r\n    }\r\n  };\r\n\r\n  const onKeyDown = (e) => {\r\n    if (e.code === \"Enter\") {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (messages < 1) {\r\n    return (\r\n      <Fragment>\r\n        <Grid\r\n          container\r\n          alignItems={\"center\"}\r\n          direction={\"column\"}\r\n          style={{ width: \"80%\" }}\r\n        >\r\n          <h1>Сообщений пока нет!</h1>\r\n          <TextField\r\n            fullWidth\r\n            style={{\r\n              marginTop: 30,\r\n            }}\r\n            placeholder={\"Введите сообщение\"}\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            variant={\"outlined\"}\r\n            onKeyDown={onKeyDown}\r\n          />\r\n          <Button\r\n            style={{\r\n              marginTop: 30,\r\n              backgroundColor: \"#017AFB\",\r\n              color: \"#ffffff\",\r\n              borderRadius: \"80px\",\r\n            }}\r\n            onClick={sendMessage}\r\n            variant={\"outlined\"}\r\n          >\r\n            ✈\r\n          </Button>\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container style={{ overflow: \"hidden\" }}>\r\n      <Grid\r\n        container\r\n        justify={\"center\"}\r\n        style={{ height: window.innerHeight - 100, marginTop: 50 }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"80%\",\r\n            height: \"60vh\",\r\n            border: \"1px solid #ccc\",\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {messages.map((message) => (\r\n            <Message\r\n              data={message}\r\n              displayName={message.displayName}\r\n              photoURL={message.photoUrl}\r\n              text={message.text}\r\n            />\r\n          ))}\r\n        </div>\r\n        <Grid\r\n          container\r\n          alignItems={\"flex-end\"}\r\n          direction={\"column\"}\r\n          style={{ width: \"80%\", marginTop: \"-45px\" }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            value={value}\r\n            placeholder={\"Введите сообщение\"}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            variant={\"outlined\"}\r\n            onKeyDown={onKeyDown}\r\n          />\r\n          <Button\r\n            style={{\r\n              marginTop: 30,\r\n              backgroundColor: \"#017AFB\",\r\n              color: \"#ffffff\",\r\n              borderRadius: \"80px\",\r\n            }}\r\n            onClick={sendMessage}\r\n            variant={\"outlined\"}\r\n          >\r\n            ✈\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\nexport default Chat;\r\n","import {LOGIN_ROUTE,CHAT_ROUTE} from '../utils/consts'\r\nimport Login from \"./Login\";\r\nimport Chat from './Chat'\r\n\r\n// Пути для не авторизированных пользователей\r\nexport const publicRoutes = [\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Login,\r\n    }\r\n]\r\n// Пути для  авторизированных пользователей\r\nexport const privateRoutes = [\r\n    {\r\n        path: CHAT_ROUTE,\r\n        Component: Chat,\r\n    }\r\n]","import React, { useContext } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { CHAT_ROUTE, LOGIN_ROUTE } from \"../utils/consts\";\r\nimport { privateRoutes, publicRoutes } from \"./routes\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Context } from \"../index\";\r\n\r\nconst AppRouter = () => {\r\n  const {auth} = useContext(Context)\r\n  const [user] = useAuthState(auth)\r\n  return user ? (\r\n    <Switch>\r\n      {privateRoutes.map(({ path, Component }) => (\r\n        <Route key={path} path={path} component={Component} exact={true} />\r\n      ))}\r\n      <Redirect to={CHAT_ROUTE} />\r\n    </Switch>\r\n  ) : (\r\n    <Switch>\r\n      {publicRoutes.map(({ path, Component }) => (\r\n        <Route key={path} path={path} component={Component} exact={true} />\r\n      ))}\r\n      <Redirect to={LOGIN_ROUTE} />\r\n    </Switch>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useContext } from \"react\";\r\nimport { AppBar, Toolbar, Grid, Button,Typography } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { LOGIN_ROUTE } from \"../utils/consts\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Context } from \"../index\";\r\n\r\nconst Navbar = () => {\r\n  const { auth } = useContext(Context); // Получение данных пользователя из контекста\r\n  const [user] = useAuthState(auth);\r\n  return (\r\n    <AppBar color={\"secondary\"} position=\"static\">\r\n      <Toolbar variant={\"dense\"}>\r\n        \r\n        <Grid container justify={\"center\"}>\r\n        \r\n        <Typography variant=\"h4\">Cute Chat</Typography>\r\n        </Grid>\r\n        <Grid container justify={\"flex-end\"}>\r\n          {user ? (\r\n            <Button onClick={() => auth.signOut()} >Выйти</Button>\r\n          ) : (\r\n            <NavLink to={LOGIN_ROUTE}>\r\n              <Button>Логин</Button>\r\n            </NavLink>\r\n          )}\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React , {useContext}from \"react\";\nimport './App.css'\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport Navbar from \"./components/Navbar\";\nimport {Context} from './index'\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Loader } from \"./components/Loader/Loader\";\n\n\nconst App = () => {\n\n  const {auth} = useContext(Context) // Получение данных пользователя из контекста\n  const [user, loading] = useAuthState(auth)\n  console.log(user)\n\n  if(loading){             // Если компонент еще загружается отрисовать лоадер\n    return <Loader/>\n  }\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <AppRouter />\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { createContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDrPPrxNdo-LItM79Rz6MNWmeJbsQ2fxbw\",\n  authDomain: \"anime-aac6e.firebaseapp.com\",\n  projectId: \"anime-aac6e\",\n  storageBucket: \"anime-aac6e.appspot.com\",\n  messagingSenderId: \"398506808340\",\n  appId: \"1:398506808340:web:ef164bd12bd7ea254e4301\",\n  measurementId: \"G-R6WV5VLXZ1\"\n});\n\nexport const Context = createContext(null); //Создание контекста с помощью хука\n\nconst auth = firebase.auth(); \nconst firestore = firebase.firestore();\n\nReactDOM.render(\n  <Context.Provider  // Прокидываем значения в Контекст\n    value={{\n      firebase,\n      auth,\n      firestore,\n    }}\n  >\n    <App />\n  </Context.Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}